// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("NUXT_DATABASE_URL")
  extensions = [pg_stat_statements, timescaledb]
}

model User {
  id                 String       @id @default(cuid())
  email              String       @unique
  passwordHash       String?
  githubId           String?      @unique
  githubUsername     String?
  githubAccessToken  String?
  apiKey             String       @unique @default(uuid())
  keystrokeTimeout   Int          @default(5)
  leaderboardEnabled Boolean      @default(true)
  createdAt          DateTime     @default(now())
  lastlogin          DateTime     @default(now())
  heartbeats         Heartbeats[]
  summaries          Summaries[]
}

model Heartbeats {
  id          String     @default(cuid())
  timestamp   BigInt
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  project     String?
  editor      String?
  language    String?
  os          String?
  file        String?
  branch      String?
  createdAt   DateTime   @default(now())
  summaries   Summaries? @relation(fields: [summariesId], references: [id])
  summariesId String?

  @@id([id, timestamp])
  @@index([userId, timestamp(sort: Desc)])
  @@index([timestamp(sort: Desc)])
  @@index([userId, project, timestamp(sort: Desc)])
  @@index([userId, language, timestamp(sort: Desc)])
  @@index([userId, editor, timestamp(sort: Desc)])
  @@index([userId, os, timestamp(sort: Desc)])
  @@index([branch])
  @@index([file])
}

model Summaries {
  id           String       @id @default(cuid())
  userId       String
  user         User         @relation(fields: [userId], references: [id])
  date         DateTime     @db.Date
  totalMinutes Int
  projects     Json?
  languages    Json?
  editors      Json?
  os           Json?
  files        Json?
  branches     Json?
  heartbeats   Heartbeats[]
  createdAt    DateTime     @default(now())

  @@unique([userId, date])
  @@index([userId, date(sort: Desc)])
}

model Stats {
  id              String   @id @default(cuid())
  date            DateTime @db.Date
  totalHours      Int
  totalUsers      BigInt
  totalHeartbeats Int
  topEditor       String
  topLanguage     String
  topOS           String
  createdAt       DateTime @default(now())

  @@unique([date])
}
